"""
Django settings for testproject project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7zewmx%)#*jm4hd-xqse&fy5lewqg+v*e-+fxsxshd%an0c8k3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition
DEPENDENCY_APPS = [
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_swagger',
    'reversion',
    'multiselectfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'rbac',
    'workflow',
    'django_filters',
    'api'
]

PROJECT_APPS = [
    'masters',
    'users',
    'login'
    # 'country',
    # 'complaints'
    # 'users',
    # 'customer',
    # 'consumer_sync'
]

INSTALLED_APPS = DEPENDENCY_APPS + PROJECT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8000',
    'http://localhost:3000'
)
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'approval-authorization',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'req',
    'source'
]

ROOT_URLCONF = 'testproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'testproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'DB5',
        'USER': 'postgres',
        'PASSWORD': 'admin',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],

    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser'
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
    'DEFAULT_METADATA_CLASS': 'api.metadata.MinimalMetadata',

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'
}
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': None
    }
}

ALLOW_CACHING = False

API_DUMMY_FILE = os.path.join(BASE_DIR, 'crp', '__init__.py')

# AUTH_USER_MODEL = 'login.CustomUser'

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


STATIC_URL = '/shop/  static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'build', 'static')
STATICFILES_DIRS = []
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_ROOT = os.path.join(BASE_DIR, 'build', 'static')
STATICFILES_DIRS = []
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

MODEL_VALIDATORS = {}

MODEL_FIELD_CHOICES = {}

DISPLAY_MODELS = {
    # 'student': 'Students'
}

DISPLAY_MODEL_FIELDS = {
    'products': ['product_id', 'product_name', 'product_desc', 'product_type', 'product_category', 'product_color',
                 'product_size', 'product_quantity', 'product_price'],
    'orders': ['order_id', 'order_price', 'order_address', 'order_quantity', 'order_date', 'product', 'customer'],
    # 'myusers': ['user_id', 'user_name', 'user_email', 'password', 'mobile', 'address', 'is_admin'],
    'users': ['user_id', 'user_name', 'user_email', 'password', 'mobile', 'address', 'is_admin'],
    # 'usercart': ['cart_product_id', 'user', 'product', 'quantity'],
    'cart': ['cart_product_id', 'user', 'product', 'quantity']
}

MASTER_APP_RBAC = 'masters'

AUTO_GENERATION_SECTIONS = ['MASTERS']

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EXTRA_USER_META = {
    'MASTERS': [
        {
            'app': 'masters',
            'title': 'MASTER'
        }
    ],
    'FORMS': [
        {
            "screen": "Users",
            "type": "subsection",
            "title": "Users"
        },
        {
            "screen": "Cart",
            "type": "subsection",
            "title": "Cart"
        },
        #     {
        #         "screen": "Complaints",
        #         "type": "subsection",
        #         "title": "Complaints"
        #     }
    ]

}

SECTION_ICONS = {
    'MASTERS': 'fa fa-th-list',
    'FORMS': "fa fa-wpforms"
    # 'Dashboard': 'fa fa-wpforms',
    # 'Dashboard': 'fa fa-wpforms',app
    # 'Customers': 'fa fa-users'
}

URL_METADATA_CLASS = {
    'api': 'api.metadata.ApiMetadata',
    'User': 'rbac.metadata.RbacMetadata',
    'Suggest': 'rbac.metadata.RbacMetadata',
    'Group': 'rbac.metadata.RbacMetadata',
    'Permission': 'rbac.metadata.RbacMetadata',
}


MODEL_FIELD_CHOICES = {
}

MASTERS_APP_RBAC = 'masters'

APPLY_SEARCH_MODEL_FIELDS = {
    # Example
    # 'student': ['student_name', 'student_roll'],
    # 'book': ['book_name', 'book_author'],
    # 'Complaints': ['created_by', 'complaint_title', 'complaint_priority']
}

FOREIGN_KEY_UI_NAME_MAP = {

}

WORKFLOW_MODEL_LIST = []

WORKFLOW_EMAIL_POLICY = {
    'default': {
        'Init': {
            'request': 'workflow.email_policy.notify_next_level',
        },
        'Approve': {
            'request': 'workflow.email_policy.notify_next_level',
            'notification': 'workflow.email_policy.get_request_initiator'
        },
        'Reject': {
            'notification': 'workflow.email_policy.notify_the_hierarchy'
        },
    }
}

RABBITMQ_CONF = {
    "RABBITMQ_CON_URL": "",
    "RABBITMQ_QUEUE": "crp_email",
    "SENDER_MAIL": "crp@amns.in",
    "MAIL_CREDENTIALS": {"sender_email": "crp@amns.in", "mailserver": "mail.myamns.in"},
    "EXCEL_EXPORT_QUEUE": "excel"
}
WORKFLOW_MAIL_MAP = {

}

MODELS_WITH_MAIL_APPROVAL = []

LANDING_PAGE_FMT = "http://localhost:3000/app/ApprovalForm/{}"

APPROVAL_API_URLS = {
}

APPROVAL_GROUPS = ['default']

MASTERS_APP_NAME = 'masters'

DATE_INPUT_FORMAT = ['%d-%m-%Y']

DATE_TIME_INPUT_FORMAT = ['%d-%m-%Y %H:%M:%S']

TIME_INPUT_FORMAT = []

POST_SAVE_OBJ_RETURN_HOOKS = {
    # 'countrymaster':'masters.views.after_save_country',
}

CHECK_USER_REGISTRATION = False

USER_PROFILE_MODEL_DETAILS = {
    'app': 'users',
    'model': 'userprofile',
    'search_on_field': 'outlook_id'
}

USER_PROFILE_SERIALIZER = 'users.serializers.UserProfileSerializer'

DATA_RESTRICT_PERMISSIONS = {}

# The AUTOCOMMIT option set to True ensures all operations that alter data (i.e. Create, Update & Delete) run in their own transaction,
# and depending on the outcome, are automatically committed to a database if successful or rolled back if they fail.

AUTOCOMMIT = True

EMAIL_USE_TLS = True

EMAIL_USE_SSL = False

EMAIL_PORT = 25

EMAIL_HOST = 'mail.myamns.in'

EMAIL_SENDER_ALIAS = ""

EMAIL_USERNAME = ""

SENDER_EMAIL = ''

MAIL_SERVER = 'mail.myamns.in'

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'basic': {
            'type': 'basic'
        }
    },
}

CUSTOMER_PORTAL_URL = "/url/"

MASTER_FILES_MOSS_UPLOAD = False
MOSS_DMS_ROOT_DIR = "Shared Documents/CRP"
MOSS_BASE_URL = 'https://amnsdms.amns.in/ext/MDM_CRP/'
MOSS_BASE_URL = 'https://amnsdms.amns.in/ext/MDM_CRP/'
MOSS_USERNAME = ''
MOSS_PASSWORD = ''
RELATIVE_FOLDER_TO_UPLOAD_URL = ''

TRANS_FILTER_QS_SERIALIZER = {
    'customer.customer': (
        'customer.helper_services.return_customer_query_set', 'customer.serializers.CustomerListViewSerializer'
    )
}

FILTER_HOOK = {
    "customer": "customer.helper_services.customer_filter"
}

SERIALIZER_HOOK = {
    "masters": {"serializer": "masters.helper_service.customDropdownSerialzer",
                "models": ["ProductDetails", "ContactPersonDepartment", "ContactPersonDesignation", "TypeOfCustomer",
                           "ShippingCondition", "SalesOffice", "SalesGroup", "SalesDistrict", "CustomerStatsGroup",
                           "CashManagementGroup", "BusinessVertical", "AccountAssignmentGroup",
                           "SalesOrganization", "DistributionChannel", "Division",
                           "CompanyCode"
                           ]}
}

EXCEL_EXPORT_CONFIGS = {}

EXCEL_IMPORT_CONFIGS = {
    # 'cashmanagementgroup': {},
    # 'typeofindustry': {},
    # 'state': {},
    # 'country': {},
    # 'currency': {},
}

# EXCEL_EXPORT_DIR = BASE_DIR + '/media/EXCEL_EXPORT'
WORKFLOW_EMAIL_CONFIGS = {}

GROUP_WISE_STATUS_MAPPING = {
}
# 'default': ['Pending For Approval', 'Initiated', 'Approved'],
# MEDIA_ROOT = BASE_DIR + '/media/'

# MEDIA_URL = '/media/'
X_FRAME_OPTIONS = 'SAMEORIGIN'
